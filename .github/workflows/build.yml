name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Build
      run: dotnet build -c Release
      
    - name: Test
      run: dotnet test -c Release --no-build
        
    - name: Publish
      run: |
        dotnet publish -c Release -r win-x64 --self-contained true `
        -p:PublishSingleFile=true `
        -p:IncludeNativeLibrariesForSelfExtract=true `
        -p:EnableCompressionInSingleFile=true `
        -p:DebugType=None `
        -p:DebugSymbols=false
      
    - name: Package Release
      run: |
        mkdir release
        copy "bin\Release\net6.0-windows\win-x64\publish\TelegramAutomation.exe" "release\"
        copy "bin\Release\net6.0-windows\win-x64\publish\nlog.config" "release\"
        copy "README.md" "release\"
        copy "LICENSE" "release\"
        Compress-Archive -Path "release\*" -DestinationPath "TelegramAutomation.zip" -Force
      
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: TelegramAutomation.zip
        draft: false
        prerelease: false
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}